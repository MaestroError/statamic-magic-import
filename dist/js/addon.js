(()=>{"use strict";function t(t){return function(t){if(Array.isArray(t))return e(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,o){if(!t)return;if("string"==typeof t)return e(t,o);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return e(t,o)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var o=0,n=new Array(e);o<e;o++)n[o]=t[o];return n}var o=function(t,e,o,n,i,s,r,c){var l,a="function"==typeof t?t.options:t;if(e&&(a.render=e,a.staticRenderFns=o,a._compiled=!0),n&&(a.functional=!0),s&&(a._scopeId="data-v-"+s),r?(l=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),i&&i.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(r)},a._ssrRegister=l):i&&(l=c?function(){i.call(this,(a.functional?this.parent:this).$root.$options.shadowRoot)}:i),l)if(a.functional){a._injectStyles=l;var u=a.render;a.render=function(t,e){return l.call(e),u(t,e)}}else{var h=a.beforeCreate;a.beforeCreate=h?[].concat(h,l):[l]}return{exports:t,options:a}}({props:{token:String},data:function(){return{importing:!1,imported:!1,importFailed:!1,importError:null,summary:null,showAllPages:!1,showCollections:[],showTaxonomies:[],importTypes:{},collectionPairs:{},collectionFieldPairs:{},existingCollections:null,counter:null,hours:0,minutes:0,seconds:0}},computed:{totalPages:function(){return this.summary.pages&&Object.keys(this.summary.pages).length},showPagesSection:function(){return this.summary&&this.summary.pages&&!this.importing&&!this.imported&&!this.importFailed},showCollectionsSection:function(){return this.summary&&this.summary.collections},showTaxonomiesSection:function(){return this.summary&&this.summary.taxonomies},totalEntries:function(){return this.calculateTotalEntries()}},mounted:function(){var t=this;this.summary=window.ImportSummary,this.existingCollections=window.existingCollections,console.log(this.existingCollections),this.summary.collections&&(Object.keys(this.summary.collections).forEach((function(e){t.importTypes[e]="new"})),console.log(this.importTypes))},methods:{setCollectionImportType:function(t,e){console.log(t,e.target.value),this.$set(this.importTypes,t,e.target.value),this.$forceUpdate()},setCollectionPair:function(t,e){this.collectionPairs[t]=e.target.value;var o=this.existingCollections.filter((function(t){return console.log(t.handle,e.target.value),t.handle==e.target.value}))[0].handles_from_blueprint;this.$set(this.collectionPairs,t+"_fields",o),setInterval((function(){document.querySelectorAll("#data-options option").forEach((function(e){e.dataset.collectionName!==t&&(e.style.display="none")}))}),500),this.$forceUpdate()},setFieldPair:function(t,e,o){var n=o.target.value;if(this.collectionFieldPairs[t])this.collectionFieldPairs[t][n]=e;else{var i={};i[n]=e,this.collectionFieldPairs[t]=i}console.log(this.collectionFieldPairs)},startImport:function(){var t=this;this.importing=!0,this.imported=!1,this.importFailed=!1,this.importError=null,this.$progress.start("json-import"),this.startTimer(),fetch(cp_url("json-import/import"),{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({_token:this.token,summary:this.summary,collectionPairs:this.collectionPairs,collectionFieldPairs:this.collectionFieldPairs})}).then((function(e){return t.importing=!1,e.ok?t.imported=!0:(t.importFailed=!0,t.importError=e.statusText+" ("+e.status+")"),t.$progress.complete("json-import"),t.stopTimer(),e.json()})).then((function(t){console.log(t)}))},hasDuplicates:function(t){return!!this.duplicateCount(t)},duplicateCount:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=0;return(t=Object.values(t))&&Array.isArray(t)?(t.forEach((function(t){t.exists&&e++})),e):e},uncheckDuplicates:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(t=Object.values(t)).length&&Array.isArray(t)&&t.forEach((function(t){t.exists&&(t._checked=!1)}))},uncheckAll:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(t=Object.values(t)).length&&Array.isArray(t)&&t.forEach((function(t){t._checked=!1}))},checkAll:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(t=Object.values(t)).length&&Array.isArray(t)&&t.forEach((function(t){t._checked=!0}))},size:function(t){return Object.keys(t).length},showCollection:function(e){this.showCollections.push(e),this.showCollections=t(new Set(this.showCollections))},hideCollection:function(t){this.showCollections=this.showCollections.filter((function(e){return e!==t}))},shouldShowCollection:function(t){return this.showCollections.includes(t)},shouldShowImportForm:function(t){return"import"==this.importTypes[t]},showTaxonomy:function(e){this.showTaxonomies.push(e),this.showTaxonomies=t(new Set(this.showTaxonomies))},hideTaxonomy:function(t){this.showTaxonomies=this.showTaxonomies.filter((function(e){return e!==t}))},shouldShowTaxonomy:function(t){return this.showTaxonomies.includes(t)},calculateTotalEntries:function(){var t=this,e=0;return this.summary.pages&&Object.keys(this.summary.pages).forEach((function(o){t.summary.pages[o]._checked&&e++})),this.summary.collections&&Object.keys(this.summary.collections).forEach((function(o){Object.keys(t.summary.collections[o].entries).forEach((function(n){t.summary.collections[o].entries[n]._checked&&e++}))})),this.summary.taxonomies&&Object.keys(this.summary.taxonomies).forEach((function(o){Object.keys(t.summary.taxonomies[o].terms).forEach((function(n){t.summary.taxonomies[o].terms[n]._checked&&e++}))})),e},startTimer:function(){var t=this;this.minutes=this.checkSingleDigit(0),this.seconds=this.checkSingleDigit(0),this.counter=setInterval((function(){var e=new Date(0,0,0,parseInt(t.hours),parseInt(t.minutes),parseInt(t.seconds)+1);t.hours=e.getHours(),t.minutes=t.checkSingleDigit(e.getMinutes()),t.seconds=t.checkSingleDigit(e.getSeconds())}),1e3)},stopTimer:function(){clearInterval(this.counter)},checkSingleDigit:function(t){return("0"+t).slice(-2)}}},undefined,undefined,!1,null,null,null);const n=o.exports;Statamic.booting((function(){Statamic.$components.register("json-importer",n)}))})();